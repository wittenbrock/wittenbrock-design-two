import { keyframes } from '@emotion/core';
import tw, { styled, css } from 'twin.macro';

/*
 * Bounce-down was made by Brandon Gregory with some modifications by me
 * https://css-tricks.com/making-css-animations-feel-natural/
 */

const bounceDownKeyframe = keyframes`
  0% {
    transform: translateY(0);
  }

  10% {
    transform: translateY(0);
  }

  30% {
    transform: translateY(50px);
  }

  50% {
    transform: translateY(0);
  }

  100% {
    transform: translateY(0);
  }
`;

/* ----------------------------------------------
 * The following animations were generated by Animista
 * w: http://animista.net, t: @cssanimista
 *
 * focus-in-expand
 */

const focusInExpandKeyframe = keyframes`
  0% {
    letter-spacing: -0.5em;
    filter: blur(12px);
    opacity: 0;
  }

  100% {
    filter: blur(0);
    opacity: 1;
  }
`;

const bounceDown = css`
  animation: ${focusInExpandKeyframe} 0.8s 3.65s
      cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards,
    ${bounceDownKeyframe} 2s 4.7s ease 1;
  transform-origin: bottom;
  opacity: 0;
`;

export const buttonStyles = [
  tw`relative bg-orange no-underline appearance-none focus:outline-none hover:cursor-pointer`,

  css`
    &:active {
      transform: translateY(0.2rem);
    }

    &::after {
      content: '';
      display: block;
      position: absolute;
      z-index: 10;
      top: 0;
      left: 0;
      border-radius: 9999px;
      opacity: 0;
      transform: scale(0.2);
      background-color: #d94726;
      height: 100%;
      width: 100%;
      transition: all 0.25s ease-out;
    }

    &:hover::after {
      transform: scale(1);
      opacity: 1;
    }
  `,
];

export const StyledLink = styled.a(({ hasBounceDown }) => [
  tw`inline-block p-5 rounded-full`,
  buttonStyles,
  hasBounceDown && bounceDown,
]);
